# Поиск в ширину

adj = [    
# список смежности
    [1,3], # 0
    [0,3,4,5], # 1
    [4,5], # 2
    [0,1,5], # 3
    [1,2], # 4
    [1,2,3] # 5
]

# список уровней вершин
level = [-1] * len(adj) 

def bfs(s):
    global level
    # уровень начальной вершины
    level[s] = 0
    # добавляем начальную вершину в очередь
    queue = [s]
    # пока там что-то есть
    while queue:
        # извлекаем вершину
        v = queue.pop(0)
        # запускаем обход из вершины v
        for w in adj[v]: 
            # проверка на посещенность
            if level[w] is -1: 
                # добавление вершины в очередь
                queue.append(w) 
                # подсчитываем уровень вершины
                level[w] = level[v] + 1

for i in range(len(adj)):
    # на случай, если имеется несколько компонент связности
    if level[i] is -1:
        bfs(i)

# уровень вершины 2
print(level[2]) 